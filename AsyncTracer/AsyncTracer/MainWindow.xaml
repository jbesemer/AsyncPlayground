<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="AsyncTracer.MainWindow"
	xmlns:System="clr-namespace:System;assembly=mscorlib"
	xmlns:Shared="clr-namespace:SharedLibrary;assembly=SharedLibrary"
	xmlns:local="clr-namespace:AsyncTracer;assembly=AsyncTracer"
	Title="Control Flow Trace" 
	Initialized="Window_Initialized"
	Loaded="Window_Loaded"
	Closing="Window_Closing"
	Height="350" Width="640">
	
	<Window.Resources>
		<ResourceDictionary>
			<!-- Constants and Binding Converters -->

			<System:Boolean x:Key="True">True</System:Boolean>
			<System:Boolean x:Key="False">False</System:Boolean>
			<!-- 
			http://stackoverflow.com/questions/4997446/boolean-commandparameter-in-xaml
			https://msdn.microsoft.com/en-us/library/ee792002(v=vs.110).aspx
			-->

			<Shared:BooleanInverter x:Key="BooleanInverter" />
			<Shared:VisibleIfTrue x:Key="VisibleIfTrue" />
			<Shared:VisibleIfFalse x:Key="VisibleIfFalse" />
			<Shared:EnumToBooleanConverter x:Key="EnumToBooleanConverter"/>

		</ResourceDictionary>
	</Window.Resources>
	
	<Grid Background="Transparent">
		<Grid.RowDefinitions>
			<RowDefinition Height="auto"/>
			<RowDefinition Height="auto"/>
			<RowDefinition Height="auto"/>
			<RowDefinition Height="*"/>
			<RowDefinition Height="auto"/>
		</Grid.RowDefinitions>
		
		<Grid.ContextMenu>
			<ContextMenu>
				<MenuItem Header="Start Wait" 
					Command="{Binding ExportHistogramCommand}"
					CommandParameter="{StaticResource True}"/>

				<MenuItem Header="Fire Forget" 
					Command="{Binding ExportHistogramCommand}"
					CommandParameter="{StaticResource False}"/>

				<MenuItem Header="Abort" Command="{Binding AbortActionCommand}"/>

				<MenuItem Header="Ping" Command="{Binding PingCommand}"/>

				<MenuItem Header="Clear" Click="ClearMenuItem_Click"/>
			</ContextMenu>
		</Grid.ContextMenu>

		<WrapPanel Grid.Row="0" x:Name="Actions"
				VerticalAlignment="Center">
			<!-- FML: wrap panel won't align contents:
			https://stackoverflow.com/questions/806777/wpf-how-can-i-center-all-items-in-a-wrappanel
			https://docs.microsoft.com/en-us/previous-versions/ms771773(v=vs.100)?redirectedfrom=MSDN
			-->

			<Button x:Name="startButton" 
				Click="startButton_Click" 
				IsEnabled="{Binding IsRunning,
					Converter={StaticResource BooleanInverter}}"
				Content="Demo" 
				VerticalAlignment="Center"
				Margin="6,10" 
				Padding="4,0"
				MinWidth="80" 
				Height="24" />

			<Button Command="{Binding ExportHistogramCommand}"
				CommandParameter="{StaticResource True}"
				Content="Export" 
				VerticalAlignment="Center"
				Margin="6,10" 
				Padding="4,0"
				MinWidth="80" 
				Height="24" />

			<Button Command="{Binding FireForgetCommand}"
				CommandParameter="{StaticResource True}"
				Content="Fire Forget" 
				VerticalAlignment="Center"
				Margin="6,10" 
				Padding="4,0"
				MinWidth="80" 
				Height="24" />

			<Button Visibility="Collapsed"
				Command="{Binding ExportHistogramCommand}"
				CommandParameter="{StaticResource False}"
				Content="Fire Forget" 
				VerticalAlignment="Center"
				Margin="6,10" 
				Padding="4,0"
				MinWidth="80" 
				Height="24" />

			<Button Command="{Binding AbortActionCommand}"
				Visibility="{Binding AbortActionIsAllowed, 
					Converter={StaticResource VisibleIfTrue}}"
				Content="Abort" 
				VerticalAlignment="Center"
				Margin="6,10" 
				Padding="4,0"
				MinWidth="80" 
				Height="24" />

		</WrapPanel>

		<WrapPanel Grid.Row="1"  x:Name="Options"
				VerticalAlignment="Center">
				<CheckBox Content="Throw"
				IsChecked="{Binding ThrowIsChecked}"
				IsEnabled="{Binding IsRunning,
					Converter={StaticResource BooleanInverter}}"
				VerticalAlignment="Center"
				Margin="8,10,0,0" 
				Padding="4,0"
				MinWidth="60" 
				Height="24" />

			<CheckBox Content="No Catch"
				IsChecked="{Binding NoCatchIsChecked}"
				IsEnabled="{Binding IsRunning,
					Converter={StaticResource BooleanInverter}}"
				VerticalAlignment="Center"
				Margin="8,10,0,0" 
				Padding="4,0"
				MinWidth="60" 
				Height="24" />

			<CheckBox Content="No Wait"
				IsChecked="{Binding NoWaitIsChecked}"
				IsEnabled="{Binding IsRunning,
					Converter={StaticResource BooleanInverter}}"
				VerticalAlignment="Center"
				Margin="8,10,0,0" 
				Padding="4,0"
				MinWidth="60" 
				Height="24" />

			<CheckBox Content="Timeout"
				IsChecked="{Binding TimeoutIsChecked}"
				IsEnabled="{Binding IsRunning,
					Converter={StaticResource BooleanInverter}}"
				VerticalAlignment="Center"
				Margin="8,10,0,0" 
				Padding="4,0"
				MinWidth="60" 
				Height="24" />
		</WrapPanel>
		
		<ProgressBar Grid.Row="2" x:Name="progressBar" 
				Value="{Binding ProgressBarValue, FallbackValue=50}"
				Height="4" />

		<TextBox Grid.Row="3" x:Name="resultsTextBox" 
				 VerticalAlignment="Stretch" 
				 HorizontalAlignment="Stretch" 
				 Background="Transparent"
				 TextWrapping="Wrap" 
				 FontFamily="Lucida Console" 
				 FontSize="10" 
				 VerticalScrollBarVisibility="Visible" >
			<TextBox.ContextMenu>
				<ContextMenu>
					<MenuItem Command="ApplicationCommands.Copy" />
					<MenuItem Command="ApplicationCommands.Cut" />
					<MenuItem Command="ApplicationCommands.SelectAll" />
					<MenuItem Header="Clear" Click="ClearMenuItem_Click"/>
				</ContextMenu>
			</TextBox.ContextMenu>
		</TextBox>
		
		<StatusBar Grid.Row="4">
			<StatusBarItem>
				<TextBlock Text="{Binding StatusText}"/>
			</StatusBarItem>
		</StatusBar>

		<!-- Busy Indicator (overlay to entire window) -->
		<Border Grid.RowSpan="3"
				Visibility="{Binding BusyIndicatorIsActive,
					Converter={StaticResource VisibleIfTrue}}"
				VerticalAlignment="Center"
				HorizontalAlignment="Center"
				BorderThickness="4" 
				Padding="4,2"
				BorderBrush="DarkGreen"
				Background="LightGray">
			<TextBlock 
				Text="{Binding BusyIndicatorText, FallbackValue=Working}"
				VerticalAlignment="Center"
				HorizontalAlignment="Center"
				Foreground="Red"
				FontSize="24">
			</TextBlock>
		</Border>
	</Grid>
</Window>
